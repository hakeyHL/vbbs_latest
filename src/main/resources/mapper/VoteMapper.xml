<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bbs.mybatis.inter.VoteMapper">
    <resultMap id="BaseResultMap" type="com.bbs.mybatis.model.Vote">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="post_id" property="postId" jdbcType="INTEGER"/>
        <result column="instructions" property="instructions" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="vote_num" property="voteNum" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    `id`, `post_id`, `instructions`, `status`, `vote_num`
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bbs.mybatis.model.VoteExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from `vote`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from `vote`
        where `id` = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `vote`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.bbs.mybatis.model.VoteExample">
        delete from `vote`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.bbs.mybatis.model.Vote">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into `vote` (`post_id`, `instructions`, `status`,
        `vote_num`)
        values (#{postId,jdbcType=INTEGER}, #{instructions,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
        #{voteNum,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.bbs.mybatis.model.Vote">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into `vote`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="postId != null">
                `post_id`,
            </if>
            <if test="instructions != null">
                `instructions`,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="voteNum != null">
                `vote_num`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="postId != null">
                #{postId,jdbcType=INTEGER},
            </if>
            <if test="instructions != null">
                #{instructions,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="voteNum != null">
                #{voteNum,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bbs.mybatis.model.VoteExample" resultType="java.lang.Integer">
        select count(*) from `vote`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update `vote`
        <set>
            <if test="record.id != null">
                `id` = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.postId != null">
                `post_id` = #{record.postId,jdbcType=INTEGER},
            </if>
            <if test="record.instructions != null">
                `instructions` = #{record.instructions,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                `status` = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.voteNum != null">
                `vote_num` = #{record.voteNum,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update `vote`
        set `id` = #{record.id,jdbcType=INTEGER},
        `post_id` = #{record.postId,jdbcType=INTEGER},
        `instructions` = #{record.instructions,jdbcType=VARCHAR},
        `status` = #{record.status,jdbcType=INTEGER},
        `vote_num` = #{record.voteNum,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bbs.mybatis.model.Vote">
        update `vote`
        <set>
            <if test="postId != null">
                `post_id` = #{postId,jdbcType=INTEGER},
            </if>
            <if test="instructions != null">
                `instructions` = #{instructions,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="voteNum != null">
                `vote_num` = #{voteNum,jdbcType=INTEGER},
            </if>
        </set>
        where `id` = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bbs.mybatis.model.Vote">
    update `vote`
    set `post_id` = #{postId,jdbcType=INTEGER},
      `instructions` = #{instructions,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      `vote_num` = #{voteNum,jdbcType=INTEGER}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
    <select resultMap="BaseResultMap" parameterType="com.bbs.mybatis.model.VoteExample"
            id="selectByExampleWithRowbounds">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from `vote`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select resultMap="BaseResultMap" parameterType="java.lang.String" id="selectByKeywordsWithRowbounds">
        SELECT p.title, v.id, v.instructions, v.post_id, v.status, v.vote_num FROM `vote` as v left join `post` as p on p.id = v.post_id
        where 1=1

        <if test="section_id != ''" >
            and section_id = #{section_id, jdbcType=INTEGER}
        </if>
        <if test="title != ''" >
            and `title` like '%' #{title, jdbcType=VARCHAR} '%'
        </if>

        order by id desc

    </select>

</mapper>